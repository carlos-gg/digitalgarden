{"version":3,"file":"ParticleShader.js","sources":["../../../../../src/scene/particle-container/shared/shader/ParticleShader.ts"],"sourcesContent":["import { Color } from '../../../../color/Color';\nimport { Matrix } from '../../../../maths/matrix/Matrix';\nimport { GlProgram } from '../../../../rendering/renderers/gl/shader/GlProgram';\nimport { GpuProgram } from '../../../../rendering/renderers/gpu/shader/GpuProgram';\nimport { Shader } from '../../../../rendering/renderers/shared/shader/Shader';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture';\nimport { TextureStyle } from '../../../../rendering/renderers/shared/texture/TextureStyle';\nimport fragment from './particles.frag';\nimport vertex from './particles.vert';\nimport wgsl from './particles.wgsl';\n\nexport class ParticleShader extends Shader\n{\n    constructor()\n    {\n        const glProgram = GlProgram.from({\n            vertex,\n            fragment\n        });\n\n        const gpuProgram = GpuProgram.from({\n            fragment: {\n                source: wgsl,\n                entryPoint: 'mainFragment'\n            },\n            vertex: {\n                source: wgsl,\n                entryPoint: 'mainVertex'\n            }\n        });\n\n        super({\n            glProgram,\n            gpuProgram,\n            resources: {\n                // this will be replaced with the texture from the particle container\n                uTexture: Texture.WHITE.source,\n                // this will be replaced with the texture style from the particle container\n                uSampler: new TextureStyle({}),\n                // this will be replaced with the local uniforms from the particle container\n                uniforms: {\n                    uTranslationMatrix: { value: new Matrix(), type: 'mat3x3<f32>' },\n                    uColor: { value: new Color(0xFFFFFF), type: 'vec4<f32>' },\n                    uRound: { value: 1, type: 'f32' },\n                    uResolution: { value: [0, 0], type: 'vec2<f32>' },\n                }\n            }\n        });\n    }\n}\n"],"names":["Shader","GlProgram","vertex","fragment","GpuProgram","wgsl","Texture","TextureStyle","Matrix","Color"],"mappings":";;;;;;;;;;;;;;AAWO,MAAM,uBAAuBA,aACpC,CAAA;AAAA,EACI,WACA,GAAA;AACI,IAAM,MAAA,SAAA,GAAYC,oBAAU,IAAK,CAAA;AAAA,cAC7BC,iBAAA;AAAA,gBACAC,mBAAA;AAAA,KACH,CAAA,CAAA;AAED,IAAM,MAAA,UAAA,GAAaC,sBAAW,IAAK,CAAA;AAAA,MAC/B,QAAU,EAAA;AAAA,QACN,MAAQ,EAAAC,mBAAA;AAAA,QACR,UAAY,EAAA,cAAA;AAAA,OAChB;AAAA,MACA,MAAQ,EAAA;AAAA,QACJ,MAAQ,EAAAA,mBAAA;AAAA,QACR,UAAY,EAAA,YAAA;AAAA,OAChB;AAAA,KACH,CAAA,CAAA;AAED,IAAM,KAAA,CAAA;AAAA,MACF,SAAA;AAAA,MACA,UAAA;AAAA,MACA,SAAW,EAAA;AAAA;AAAA,QAEP,QAAA,EAAUC,gBAAQ,KAAM,CAAA,MAAA;AAAA;AAAA,QAExB,QAAU,EAAA,IAAIC,yBAAa,CAAA,EAAE,CAAA;AAAA;AAAA,QAE7B,QAAU,EAAA;AAAA,UACN,oBAAoB,EAAE,KAAA,EAAO,IAAIC,aAAO,EAAA,EAAG,MAAM,aAAc,EAAA;AAAA,UAC/D,MAAA,EAAQ,EAAE,KAAO,EAAA,IAAIC,YAAM,QAAQ,CAAA,EAAG,MAAM,WAAY,EAAA;AAAA,UACxD,MAAQ,EAAA,EAAE,KAAO,EAAA,CAAA,EAAG,MAAM,KAAM,EAAA;AAAA,UAChC,WAAA,EAAa,EAAE,KAAO,EAAA,CAAC,GAAG,CAAC,CAAA,EAAG,MAAM,WAAY,EAAA;AAAA,SACpD;AAAA,OACJ;AAAA,KACH,CAAA,CAAA;AAAA,GACL;AACJ;;;;"}