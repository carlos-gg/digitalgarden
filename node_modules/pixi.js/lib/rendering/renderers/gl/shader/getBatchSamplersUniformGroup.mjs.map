{"version":3,"file":"getBatchSamplersUniformGroup.mjs","sources":["../../../../../src/rendering/renderers/gl/shader/getBatchSamplersUniformGroup.ts"],"sourcesContent":["import { UniformGroup } from '../../shared/shader/UniformGroup';\n\nconst batchSamplersUniformGroupHash: Record<number, UniformGroup> = {};\n\n/**\n * Automatically generates a uniform group that holds the texture samplers for a shader.\n * This is used mainly by the shaders that batch textures!\n * @param maxTextures - the number of textures that this uniform group will contain.\n * @returns a uniform group that holds the texture samplers.\n */\nexport function getBatchSamplersUniformGroup(maxTextures: number)\n{\n    let batchSamplersUniformGroup = batchSamplersUniformGroupHash[maxTextures];\n\n    if (batchSamplersUniformGroup) return batchSamplersUniformGroup;\n\n    const sampleValues = new Int32Array(maxTextures);\n\n    for (let i = 0; i < maxTextures; i++)\n    {\n        sampleValues[i] = i;\n    }\n\n    batchSamplersUniformGroup = batchSamplersUniformGroupHash[maxTextures] = new UniformGroup({\n        uTextures: { value: sampleValues, type: `i32`, size: maxTextures }\n    }, { isStatic: true });\n\n    return batchSamplersUniformGroup;\n}\n"],"names":[],"mappings":";;;AAEA,MAAM,gCAA8D,EAAC,CAAA;AAQ9D,SAAS,6BAA6B,WAC7C,EAAA;AACI,EAAI,IAAA,yBAAA,GAA4B,8BAA8B,WAAW,CAAA,CAAA;AAEzE,EAAI,IAAA,yBAAA;AAA2B,IAAO,OAAA,yBAAA,CAAA;AAEtC,EAAM,MAAA,YAAA,GAAe,IAAI,UAAA,CAAW,WAAW,CAAA,CAAA;AAE/C,EAAA,KAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,WAAA,EAAa,CACjC,EAAA,EAAA;AACI,IAAA,YAAA,CAAa,CAAC,CAAI,GAAA,CAAA,CAAA;AAAA,GACtB;AAEA,EAAA,yBAAA,GAA4B,6BAA8B,CAAA,WAAW,CAAI,GAAA,IAAI,YAAa,CAAA;AAAA,IACtF,WAAW,EAAE,KAAA,EAAO,cAAc,IAAM,EAAA,CAAA,GAAA,CAAA,EAAO,MAAM,WAAY,EAAA;AAAA,GAClE,EAAA,EAAE,QAAU,EAAA,IAAA,EAAM,CAAA,CAAA;AAErB,EAAO,OAAA,yBAAA,CAAA;AACX;;;;"}